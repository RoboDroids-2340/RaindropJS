<!DOCTYPE html>
<html>
<head>
  <title>Raindrop</title>
  <style>
    body {
      background-color: pink;
    }
    h1, p, form, table {
      text-align: center;
    }
    #map {
      height: 400px;
      width: 900px;
    }
    #content {
      border: 2px solid;
      width: 900px;
      margin: 0 auto;
      background-color: LightGrey;
      font-family: sans-serif;
    }
    button {
      margin: 5px;
    }
  </style>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
  <script src="https://www.gstatic.com/firebasejs/3.8.0/firebase.js"></script>
  <script
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC46JmgIq7DWuspDskvN9rIwCVkJdgx4hE">
    </script>
  <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
  <script>
    // Initialize Firebase
    var config = {
      apiKey: "AIzaSyDrpb5b3EOjgQ7reJqpRFLozAqlwDgdkFY",
      authDomain: "raindrop-3c2ba.firebaseapp.com",
      databaseURL: "https://raindrop-3c2ba.firebaseio.com",
      projectId: "raindrop-3c2ba",
      storageBucket: "raindrop-3c2ba.appspot.com",
      messagingSenderId: "1045329521182"
    };
    firebase.initializeApp(config);
    var username;
    var usertype;
    var personName;
    $(document).ready(function() {
      goToStart();
      google.charts.load('current', {packages: ['corechart', 'line']});
    });
    function login() {
      var email = $('#email').val().replace(".", ",");
      var password = $('#password').val();
      userref = firebase.database().ref('users/' + email).once('value').then(function(snapshot) {
        if (snapshot.val()) { // if val != null
          var correctPass = snapshot.val().pass;
          if (password == correctPass) {
            username = email;
            usertype = snapshot.val().type;
            personName = snapshot.val().name;
            goToMain();
          } else {
            alert("Incorrect password!");
          }
        } else {
          alert("Could not find username!");
        }
      });
    }
    function register() {
      var usertype = $('input[name=usertype]:checked').val();
      var email = $('#email').val().replace(".", ",");
      var password = $('#password').val();
      var personName = $('#name').val();
      if (usertype && email != '' && password != '' && personName != '') {
        userref = firebase.database().ref('users/' + email).set({
          name: personName,
          pass: password,
          type: usertype,
          userid: email
        });
        goToLogin();
      } else {
        alert("Must provide valid login info");
      }
    }
    function submitEdit() {
      var password = $('#password').val();
      var personName = $('#name').val();
      if (password != '') {
          userref = firebase.database().ref('users/' + username + '/pass').set(password);
        if (personName != '') {
          userref = firebase.database().ref('users/' + username + '/name').set(personName);
        }
        goToMain();
      }
    }
    function goToStart() {
      $("#content").load("start.htm");
    }
    function goToLogin() {
      $("#content").load("login.htm");
    }
    function goToRegister() {
      $("#content").load("register.htm");
    }
    function goToMain() {
      $("#content").load("main.htm");
    }
    function goToEdit() {
      $("#content").load("edit.htm");
    }
    function createWaterReport() {
      $("#content").load("createWaterReport.htm");
    }
    function submitWaterReport() {
      var watertype = $('input[name=watertype]:checked').val();
      var watercondition = $('input[name=watercondition]:checked').val();
      var latitude = parseFloat($('#latitude').val());
      var longitude = parseFloat($('#longitude').val());
      if (watertype && watercondition && latitude != '' && longitude != '') {
        var milliseconds = new Date().getTime().toString();
        firebase.database().ref('num_water_reports').once('value').then(function(response) {
          var numWaterReports = response.val();
          numWaterReports++;
          firebase.database().ref('num_water_reports').set(numWaterReports);
          firebase.database().ref('water_reports').child(numWaterReports).set({
            lat: latitude,
            lon: longitude,
            reportNumber: numWaterReports,
            submissionTime: milliseconds,
            waterCondition: watercondition,
            waterType: watertype,
            reporterName: username
          });
        });
        goToMain();
      } else {
        alert("Must provide valid info");
      }
    }
    function createQualityReport() {
      if (usertype == "User") {
        alert("You do not have premission to do that!");
      } else {
        $("#content").load("createQualityReport.htm");
      }
    }
    function submitQualityReport() {
      var watercondition = $('input[name=watercondition]:checked').val();
      var virusppm = parseFloat($('#virusppm').val());
      var contaminantppm = parseFloat($('#contaminantppm').val());
      var latitude = parseFloat($('#latitude').val());
      var longitude = parseFloat($('#longitude').val());
      if (watercondition && latitude != '' && longitude != '') {
        var milliseconds = new Date().getTime().toString();
        firebase.database().ref('num_quality_reports').once('value').then(function(response) {
          var numQualityReports = response.val();
          numQualityReports++;
          firebase.database().ref('num_quality_reports').set(numQualityReports);
          firebase.database().ref('quality_reports').child(numQualityReports).set({
            lat: latitude,
            lon: longitude,
            reportNumber: numQualityReports,
            submissionTime: milliseconds,
            waterCondition: watercondition,
            virusPPM: virusppm,
            contaminantPPM: contaminantppm,
            reporterName: username
          });
        });
        goToMain();
      } else {
        alert("Must provide valid info");
      }
    }
    function viewWaterReports() {
      $("#content").load("viewWaterReports.htm");
      firebase.database().ref('water_reports').once('value').then(function(response) {
        var table = '';
        var reports = response.val();
        Object.keys(reports).forEach(function (key) {
          table += '<tr>';
          var report = reports[key];
          table += '<td>' + report['reportNumber'] + '</td>';
          table += '<td>' + report['lat'] + '</td>';
          table += '<td>' + report['lon'] + '</td>';
          table += '<td>' + report['waterCondition'] + '</td>';
          table += '<td>' + report['waterType'] + '</td>';
          table += '<td>' + report['reporterName'] + '</td>';
          table += '<td>' + (new Date(parseInt(report['submissionTime']))) + '</td>';
          table += '</tr>';
        });
        $('tbody').html(table);
      });
    }
    function viewQualityReports() {
      $("#content").load("viewQualityReports.htm");
      firebase.database().ref('quality_reports').once('value').then(function(response) {
        var table = '';
        var reports = response.val();
        Object.keys(reports).forEach(function (key) {
          table += '<tr>';
          var report = reports[key];
          table += '<td>' + report['reportNumber'] + '</td>';
          table += '<td>' + report['lat'] + '</td>';
          table += '<td>' + report['lon'] + '</td>';
          table += '<td>' + report['waterCondition'] + '</td>';
          table += '<td>' + report['contaminantPPM'] + '</td>';
          table += '<td>' + report['virusPPM'] + '</td>';
          table += '<td>' + report['reporterName'] + '</td>';
          table += '<td>' + (new Date(parseInt(report['submissionTime']))) + '</td>';
          table += '</tr>';
        });
        $('tbody').html(table);
      });
    }
    function viewMap() {
      $("#content").load("viewMap.htm", function() {
        var map = new google.maps.Map(document.getElementById('map'), {
          zoom: 2,
          center: {lat: 0, lng: 0}
        });
        firebase.database().ref('quality_reports').once('value').then(function(response) {
          var reports = response.val();
          Object.keys(reports).forEach(function (key) {
            var report = reports[key];
            new google.maps.Marker({
              position: {lat: report['lat'], lng: report['lon']},
              map: map
            });
          });
        });
      });
    }
    function viewHistoricalReport() {
      if (usertype == "User" || usertype == "Worker") {
        alert("You do not have premission to do that!");
      } else {
        $("#content").load("viewHistoricalReport.htm");
      }
    }
    function showHistoricalReport() {
      var data = new google.visualization.DataTable();
      data.addColumn('number', 'X');
      data.addColumn('number', 'PPM');
      var lat = parseFloat($('#latitude').val());
      var lon = parseFloat($('#longitude').val());
      var year = parseFloat($('#year').val());
      var type = $('input[name=reporttype]:checked').val();
      var ppms = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
      var elementcounts = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
      firebase.database().ref('quality_reports').once('value').then(function(response) {
        var reports = response.val();
        Object.keys(reports).forEach(function (key) {
          var report = reports[key];
          var date = new Date(parseInt(report['submissionTime']));
          if (report['lat'] == lat && report['lon'] == lon
              && date.getFullYear() == year) {
            var month = date.getMonth();
            var ppm = report[(type == "Contaminant" ? 'contaminantPPM' : 'virusPPM')];
            ppms[month] = (ppms[month] * elementcounts[month] + ppm) / (elementcounts[month] + 1);
            elementcounts[month]++;
          }
        });
        for (var i = 0; i < 12; i++) {
          data.addRow([i + 1, ppms[i]]);
        }
        //console.log(data.toJSON());
        var options = {
          hAxis: {
            title: 'Month'
          },
          vAxis: {
            title: 'PPM'
          }
        };
        var chart = new google.visualization.LineChart(document.getElementById('chart_div'));
        chart.draw(data, options);
      });
    }
  </script>
</head>
<body>
  <div id="content">
    If this is seen, there has been a network error.
  </div>
</body>
</html>